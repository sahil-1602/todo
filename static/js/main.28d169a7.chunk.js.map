{"version":3,"sources":["hooks/useInputState.js","actions/index.js","components/TodoForm/TodoForm.jsx","reducers/index.js","reducers/Todo.reducer.js","reducers/Theme.reducer.js","store.js","hooks/useSelector.js","components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","components/Navbar/Navbar.jsx","components/EditTodoForm/EditTodoForm.jsx","App.js","index.js"],"names":["initialVal","useState","value","setValue","e","target","editTodo","id","task","desc","due","status","type","TodoForm","dispatch","useDispatch","history","useHistory","isDark","useSelector","state","darkTheme","useInputState","title","changeTitle","resetTitle","changeDesc","resetDesc","changeDue","resetDue","changeStatus","resetStatus","popup","setPopup","inputClass","labelClass","className","onClick","addTodo","push","onSubmit","preventDefault","onChange","required","placeholder","autoComplete","htmlFor","onFocus","rootReducer","combineReducers","todo","action","uuid","filter","map","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","getState","Todo","props","setStatus","deleteTodo","Dropdown","options","key","text","selectedKey","selectedOption","TodoList","todos","PrimaryButton","Navbar","setIsDark","checked","to","EditTodoForm","location","pathname","substr","length","find","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28d169a7.chunk.js","sourcesContent":["import { useState } from 'react';\r\nexport default initialVal => {\r\n    const [value, setValue] = useState(initialVal);\r\n    const handleChange = e => {\r\n        setValue(e.target.value);\r\n    };\r\n    const reset = () => {\r\n        setValue(\"\");\r\n    };\r\n    return [value, handleChange, reset];\r\n};","export const addTodo = (task, desc, due, status) => {\r\n    return {\r\n        type: \"ADD\",\r\n        task,\r\n        desc,\r\n        due,\r\n        status\r\n    }\r\n}\r\n\r\nexport const deleteTodo = (id) => {\r\n    return {\r\n        type: \"REMOVE\",\r\n        id\r\n    }\r\n}\r\n\r\nexport const editTodo = (id, task, desc, due, status) => {\r\n    return {\r\n        type: \"EDIT\",\r\n        id,\r\n        task,\r\n        desc,\r\n        due,\r\n        status\r\n    }\r\n}\r\n\r\nexport const toggleTheme = () => {\r\n    return {\r\n        type: \"TOGGLE\"\r\n    }\r\n}","import React, {useState} from 'react';\r\n\r\n\r\nimport {useDispatch} from 'react-redux';\r\nimport {useHistory } from 'react-router-dom';\r\n\r\nimport useInputState from '../../hooks/useInputState';\r\nimport {useSelector} from 'react-redux';\r\nimport {addTodo} from '../../actions';\r\n\r\nimport \"./TodoForm.scss\";\r\n\r\n\r\n\r\nexport default function TodoForm() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const history = useHistory();\r\n\r\n    const isDark = useSelector(state =>  state.darkTheme);\r\n\r\n    const [title, changeTitle, resetTitle] = useInputState(\"\");\r\n    const [desc, changeDesc, resetDesc] = useInputState(\"\");\r\n    const [due, changeDue, resetDue] = useInputState(\"\");\r\n    const [status, changeStatus, resetStatus] = useInputState(\"\");\r\n\r\n    const [popup, setPopup] = useState(\"popup\");\r\n    const inputClass = isDark ? \"form__input dark\" : \"form__input\";\r\n    const labelClass = isDark ? \"form__label dark\" : \"form__label\";\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setPopup(\"popup active\");  \r\n    }\r\n\r\n    const handlePopupCancel = (e) => {\r\n        setPopup(\"popup\");\r\n    }\r\n\r\n    const handlePopupConfirm = (e) => {\r\n        dispatch(addTodo(title, desc, due, status));\r\n\r\n        resetTitle();\r\n        resetDesc();\r\n        resetDue();\r\n        resetStatus();\r\n\r\n        history.push(\"/todo/list\");\r\n    }\r\n\r\n    return (\r\n        <div className={isDark ? \"container dark\" : \"container light\"}>\r\n\r\n            <div className={popup}>\r\n                <h2>YOUR TODO</h2>\r\n                <div className=\"popup__section popup__head\">\r\n                    <span>Task :</span> {title} \r\n                </div>\r\n                <div className=\"popup__section popup__desc\">\r\n                    <span>Description :</span> {desc} \r\n                </div>\r\n                <div className=\"popup__section popup__date\">\r\n                    <span>Due Date :</span> {due} \r\n                </div>\r\n                <div className=\"popup__section popup__status\">\r\n                    <span>Status :</span> {status} \r\n                </div>\r\n                <div className=\"popup__btns\">\r\n                    <div onClick={handlePopupConfirm} className=\"popup__btns-confirm\">Confirm</div>\r\n                    <div onClick={handlePopupCancel} className=\"popup__btns-cancel\">Cancel</div>\r\n                </div>\r\n            </div>\r\n\r\n            <form className=\"form\"  onSubmit={handleSubmit}>\r\n                <div  className=\"form__group\">\r\n                    <input\r\n                        className={inputClass} \r\n                        value={title} \r\n                        onChange={changeTitle} \r\n                        required placeholder=\"Title\" \r\n                        type=\"text\"\r\n                        id=\"title\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <label htmlFor=\"title\" className={labelClass}>Task</label>\r\n                </div>\r\n\r\n                <div className=\"form__group\">\r\n                    <input\r\n                        className={inputClass} \r\n                        value={desc} \r\n                        onChange={changeDesc} \r\n                        required placeholder=\"Description\" \r\n                        type=\"text\"\r\n                        id=\"desc\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <label htmlFor=\"desc\" className={labelClass}>Description</label>\r\n                </div>\r\n\r\n                <div className=\"form__group\">\r\n                    <input \r\n                        value={due}\r\n                        className={inputClass} \r\n                        onChange={changeDue} \r\n                        placeholder=\"Due Date\" \r\n                        type=\"text\"\r\n                        onFocus={(e) => e.target.type='date'}\r\n                        id=\"date\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <label htmlFor=\"date\" className={labelClass}>Due Date</label>\r\n                </div>\r\n\r\n                <div className=\"form__group\">\r\n                    <select onChange={changeStatus} id=\"status\" className={inputClass}>\r\n                        <option value=\"todo\">Todo</option>\r\n                        <option value=\"on\">Ongoing</option>\r\n                        <option value=\"stalled\">Stalled</option>\r\n                        <option value=\"done\">Done</option>\r\n                    </select>\r\n                    <label htmlFor=\"status\" className={labelClass}>Status</label>\r\n                </div>\r\n                <div className=\"btn-container\">\r\n                    <button className=\"button\" type=\"submit\">SUBMIT</button>\r\n                    <div></div>\r\n                    <button onClick={() => history.push(\"/todo/list\")} className=\"button\" >CANCEL</button>\r\n                </div>    \r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}","import {todoReducer} from './Todo.reducer';\r\nimport {themeReducer} from './Theme.reducer';\r\nimport {combineReducers} from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n    todo: todoReducer,\r\n    darkTheme: themeReducer\r\n});\r\n\r\nexport default rootReducer;","import uuid from \"uuid/dist/v4\";\r\nexport const todoReducer = (state=[], action) => {\r\n    switch(action.type){\r\n        case \"ADD\":\r\n            return [...state, \r\n                {\r\n                    id: uuid(),\r\n                    title: action.task,\r\n                    desc: action.desc,\r\n                    due: action.due,\r\n                    status: action.status\r\n                }\r\n            ];\r\n        case \"REMOVE\":\r\n            return state.filter(todo => todo.id !== action.id);\r\n        case \"EDIT\":\r\n            return state.map(todo => (\r\n                todo.id === action.id ? {\r\n                    ...todo,\r\n                    title: action.task,\r\n                    desc: action.desc,\r\n                    due: action.due,\r\n                    status: action.status\r\n                } : todo\r\n            ));\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// title description due status ","export const themeReducer = (state=false, action) => {\r\n    switch(action.type){\r\n        case \"TOGGLE\":\r\n            return !state;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore} from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\nexport const store = createStore(\r\n  rootReducer, \r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);","import {store} from '../store';\r\nexport const useSelector = store.getState;\r\n\r\n","import React, {useState} from 'react';\r\n\r\nimport {useDispatch} from 'react-redux';\r\nimport {Dropdown} from 'office-ui-fabric-react';\r\nimport {useHistory } from 'react-router-dom';\r\n\r\nimport {deleteTodo} from \"../../actions\";\r\nimport {editTodo} from \"../../actions\";\r\n\r\nimport {useSelector} from '../../hooks/useSelector';\r\n\r\nimport { MdCreate } from \"react-icons/md\";\r\nimport { MdDelete } from \"react-icons/md\";\r\n\r\nimport './Todo.scss';\r\n\r\n\r\n\r\nexport default function Todo(props) {\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const state = useSelector();\r\n\r\n    const isDark = state.darkTheme;\r\n\r\n    const todo = props.todo;\r\n    const [status, setStatus] = useState(todo.id);\r\n\r\n    const options = [\r\n        {key: \"todo\", text: \"ToDo\"},\r\n        {key: \"on\", text: \"Ongoing\"},\r\n        {key: \"stalled\", text: \"Stalled\"},\r\n        {key: \"done\", text: \"Done\"},\r\n    ];\r\n\r\n    const handleDelete = (id) => {\r\n        dispatch(deleteTodo(id));\r\n    }\r\n    \r\n    const handleEdit = (id) => {\r\n        history.push(`/todo/edit/${id}`);\r\n    }\r\n\r\n    const handleDropDown = (e, selectedOption) => {\r\n        dispatch(editTodo(todo.id, todo.title, todo.desc, todo.due, selectedOption.key));\r\n        setStatus(selectedOption.key);\r\n    }\r\n\r\n    return (\r\n        <div className={status === \"done\" ? \"todo done\" : \"todo\" }>\r\n            <div className={isDark ? \"todo__card dark\" : \"todo__card\"}>\r\n                <div className=\"todo__head\">\r\n                    <div>\r\n                        <h3 className=\"todo__title\"><i>{todo.title}</i></h3>\r\n                    </div>\r\n                    <div className=\"todo__head-attr\">\r\n                        <div onClick={() => handleEdit(todo.id)}><MdCreate/></div>\r\n                        <div onClick={() => handleDelete(todo.id)}><MdDelete/></div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"todo__desc\">{todo.desc}</div>\r\n                <div className=\"todo__info\">\r\n                    <p className=\"todo__due\">Due by {todo.due}</p>\r\n                    <div className=\"todo__status\">\r\n                        <Dropdown\r\n                            placeholder=\"change\"\r\n                            options={options}\r\n                            selectedKey={todo.status}\r\n                            onChange = {handleDropDown}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport { PrimaryButton } from 'office-ui-fabric-react';\r\nimport {useHistory } from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\n\r\nimport Todo from '../Todo/Todo';\r\nimport './TodoList.scss';\r\n\r\nexport default function TodoList() {\r\n    const history = useHistory();\r\n\r\n    const todos = useSelector(state => state.todo);\r\n\r\n    const isDark = useSelector(state => state.darkTheme);\r\n\r\n    const handleClick = () => {\r\n        history.push(\"/todo/form\");\r\n    }\r\n\r\n    return (\r\n        <div className={isDark ? \"list dark\" : \"list light\"}>\r\n            <div className=\"btn\">\r\n                <PrimaryButton onClick={handleClick} text=\"Add Todo\" />\r\n            </div>\r\n\r\n            <div className={isDark ? \"container dark\" : \"container light\"}>\r\n                {todos.map((todo) => <div className=\"todo\" key={todo.id}><Todo todo={todo}/></div>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\n\r\nimport { useSelector ,useDispatch} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport Switch from 'react-switch';\r\n\r\nimport {toggleTheme} from '../../actions'\r\n\r\nimport './Navbar.scss';\r\n\r\nexport default function Navbar() {\r\n    const dispatch = useDispatch()\r\n\r\n    const [isDark, setIsDark] = useState(useSelector(state => state.darkTheme));\r\n\r\n    const changeTheme = () => {\r\n        setIsDark(!isDark);\r\n        dispatch(toggleTheme());\r\n    }\r\n    \r\n    return (\r\n        <div className={isDark ? \"nav dark\" : \"nav light\"}>\r\n            <div className=\"nav__item\">\r\n                <Switch title=\"switch\" onChange={changeTheme} checked={isDark}/>\r\n            </div>\r\n            <div className=\"nav__item\">\r\n                <div className=\"nav__item-brand\">\r\n                    <Link title=\"link\" to=\"/todo/list\">Todos-App</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport useInputState from '../../hooks/useInputState';\r\nimport {useDispatch} from 'react-redux';\r\nimport {useHistory } from 'react-router-dom';\r\n\r\nimport {useSelector} from 'react-redux';\r\n\r\nimport {editTodo} from '../../actions';\r\nimport \"../TodoForm/TodoForm.scss\";\r\n\r\n\r\n\r\nexport default function EditTodoForm(props) {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const todos = useSelector(state => state.todo);\r\n    \r\n    const isDark = useSelector(state => state.darkTheme);\r\n    \r\n    let id = window.location.pathname;\r\n    id = id.substr(11, id.length);\r\n    let todo = todos.find(todo => todo.id === id);\r\n\r\n    \r\n    const [title, changeTitle, resetTitle] = useInputState(todo?.title || \"\");\r\n    const [desc, changeDesc, resetDesc] = useInputState(todo?.desc || \"\");\r\n    const [due, changeDue, resetDue] = useInputState(todo?.due || \"\");\r\n    const [status, changeStatus, resetStatus] = useInputState(todo?.status || \"\");\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(editTodo(id, title, desc, due, status));\r\n\r\n        resetTitle();\r\n        resetDesc();\r\n        resetDue();\r\n        resetStatus();\r\n\r\n        history.push(\"/todo/list\");\r\n    }\r\n    const inputClass = isDark ? \"form__input dark\" : \"form__input\";\r\n    const labelClass = isDark ? \"form__label dark\" : \"form__label\";\r\n\r\n    if(todo){\r\n        return (\r\n            <div className={isDark ? \"container dark\" : \"container light\"}>\r\n                <form  className=\"form\" onSubmit={handleSubmit}>\r\n                    <div className=\"form__group\">\r\n                        <input\r\n                            className={inputClass} \r\n                            value={title} \r\n                            onChange={changeTitle} \r\n                            required placeholder=\"Title\" \r\n                            type=\"text\"\r\n                            id=\"title\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <label htmlFor=\"title\" className={labelClass}>Task</label>\r\n                    </div>\r\n\r\n                    <div className=\"form__group\">\r\n                        <input\r\n                            className={inputClass} \r\n                            value={desc} \r\n                            onChange={changeDesc} \r\n                            required placeholder=\"Description\" \r\n                            type=\"text\"\r\n                            id=\"desc\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <label htmlFor=\"desc\" className={labelClass}>Description</label>\r\n                    </div>\r\n\r\n                    <div className=\"form__group\">\r\n                        <input \r\n                            value={due}\r\n                            className={inputClass} \r\n                            onChange={changeDue} \r\n                            placeholder=\"Due Date\" \r\n                            type=\"date\"\r\n                            id=\"date\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <label htmlFor=\"date\" className={labelClass}>Due Date</label>\r\n                    </div>\r\n\r\n                    <div className=\"form__group\">\r\n                        <select value={status} onChange={changeStatus} id=\"status\" className={inputClass}>\r\n                            <option value=\"todo\">Todo</option>\r\n                            <option value=\"on\">Ongoing</option>\r\n                            <option value=\"stalled\">Stalled</option>\r\n                            <option value=\"done\">Done</option>\r\n                        </select>\r\n                        <label htmlFor=\"status\" className={labelClass}>Status</label>\r\n                    </div>\r\n                    \r\n                    <button className=\"button\" type=\"submit\">UPDATE</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }else{\r\n        return(\r\n            <h2>We didn't find any todo :(</h2>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport TodoForm from './components/TodoForm/TodoForm';\nimport TodoList from './components/TodoList/TodoList';\n\nimport Navbar from './components/Navbar/Navbar';\nimport EditTodoForm from './components/EditTodoForm/EditTodoForm';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Redirect to=\"/todo/list\"/>\n      <Switch>\n        <Route \n          exact\n          path=\"/todo/list\"\n          component={TodoList}\n        />\n        <Route \n          exact\n          path=\"/todo/form\"\n          component={TodoForm}\n        />\n        <Route\n          exact\n          path=\"/todo/edit/:id\"\n          component={EditTodoForm}\n        />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport {store} from './store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n  \n    <Provider store={store}>\n      <BrowserRouter>\n      <App />\n      </BrowserRouter>\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}